---
- name: Create Cert-Manager
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    definition: "{{ lookup('url', 'https://github.com/jetstack/cert-manager/releases/download/v1.11.4/cert-manager.yaml', split_lines=False) }}"

- name: Create Letsencrypt ClusterIssuer
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: cert-manager
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-issuer
      spec:
        acme:
          email: admin@ture.dev
          server: https://acme-v02.api.letsencrypt.org/directory
          privateKeySecretRef:
            name: letsencrypt-issuer
          solvers:
            - http01:
                ingress:
                  class: traefik

- name: Create internal CA Secret
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: cert-manager
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: internal-ca
      data:
        tls.crt: "{{ internal_ca_cert }}"
        tls.key: "{{ internal_ca_key }}"

- name: Create internal CA ClusterIssuer
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: cert-manager
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: internal-issuer
      spec:
        ca:
          secretName: internal-ca

- name: Create the traefik https redirect middleware
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kube-system
    definition:
      apiVersion: traefik.io/v1alpha1
      kind: Middleware
      metadata:
        name: redirect-https
      spec:
        redirectScheme:
          scheme: https
          permanent: true
