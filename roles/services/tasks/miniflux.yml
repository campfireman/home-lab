---
- name: Create Miniflux namespace
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: miniflux

- name: Create Miniflux ConfigMap
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: miniflux
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: miniflux-config
        labels:
          app: miniflux
      data:
        RUN_MIGRATIONS: "1"
        CREATE_ADMIN: "1"
        ADMIN_USERNAME: admin

- name: Create Miniflux Secrets
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: miniflux
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: miniflux-secrets
      data:
        DATABASE_URL: "{{ ('postgres://' + postgres_shared_username + ':' + postgres_shared_password + '@postgres-service.postgres.svc.cluster.local/' + miniflux_database + '?sslmode=disable') | b64encode }}"
        ADMIN_PASSWORD: "{{ miniflux_admin_password|b64encode }}"

- name: Create Miniflux Service
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: miniflux
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: miniflux-service
      spec:
        selector:
          app: miniflux
        ports:
          - port: 80
            name: http
            protocol: TCP
            targetPort: 8080

- name: Create Miniflux Deployment
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: miniflux
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: miniflux
        labels:
          app: miniflux
      spec:
        replicas: 2
        selector:
          matchLabels:
            app: miniflux
        template:
          metadata:
            labels:
              app: miniflux
          spec:
            containers:
              - name: miniflux
                image: miniflux/miniflux:2.0.45
                imagePullPolicy: "IfNotPresent"
                ports:
                  - containerPort: 8080
                envFrom:
                  - configMapRef:
                      name: miniflux-config
                  - secretRef:
                      name: miniflux-secrets
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /
                    port: 8080
                    scheme: HTTP
                  initialDelaySeconds: 10
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 2
                livenessProbe:
                  failureThreshold: 3
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  successThreshold: 1
                  tcpSocket:
                    port: 8080
                  timeoutSeconds: 1
                resources:
                  requests:
                    cpu: 250m
                    memory: 750Mi

- name: Create an Ingress for the Miniflux Service
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: miniflux
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: miniflux-ingress
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: internal-issuer
          traefik.ingress.kubernetes.io/router.middlewares: kube-system-redirect-https@kubernetescrd
      spec:
        rules:
          - host: miniflux.{{ domain }}
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: miniflux-service
                      port:
                        number: 80
        tls:
          - secretName: miniflux-tls
            hosts:
              - miniflux.{{ domain }}
