# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Create Kubernetes-Dashboard Namespace
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: kubernetes-dashboard

- name: Create Kubernetes-Dashboard Service Account
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        labels:
          app: kubernetes-dashboard
        name: kubernetes-dashboard

- name: Create Kubernetes-Dashboard Service
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        labels:
          app: kubernetes-dashboard
        name: kubernetes-dashboard
      spec:
        ports:
          - port: 80
            targetPort: 9090
        selector:
          app: kubernetes-dashboard

- name: Create Kubernetes-Dashboard ConfigMap
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        labels:
          app: kubernetes-dashboard
        name: kubernetes-dashboard-settings
        namespace: kubernetes-dashboard

- name: Create Kubernetes-Dashboard CSRF Secret
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        labels:
          app: kubernetes-dashboard
        name: kubernetes-dashboard-csrf
        namespace: kubernetes-dashboard
      type: Opaque
      data:
        csrf: ""

- name: Create Kubernetes-Dashboard Key Holder Secret
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        labels:
          app: kubernetes-dashboard
        name: kubernetes-dashboard-key-holder
        namespace: kubernetes-dashboard
      type: Opaque

- name: Create Kubernetes-Dashboard RBAC
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      kind: Role
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        labels:
          app: kubernetes-dashboard
        name: kubernetes-dashboard
      rules:
        # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
        - apiGroups: [""]
          resources: ["secrets"]
          # resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs", "kubernetes-dashboard-csrf"]
          resourceNames:
            ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-csrf"]
          verbs: ["get", "update", "delete"]
          # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
        - apiGroups: [""]
          resources: ["configmaps"]
          resourceNames: ["kubernetes-dashboard-settings"]
          verbs: ["get", "update"]
          # Allow Dashboard to get metrics.
        - apiGroups: [""]
          resources: ["services"]
          resourceNames: ["heapster", "dashboard-metrics-scraper"]
          verbs: ["proxy"]
        - apiGroups: [""]
          resources: ["services/proxy"]
          resourceNames:
            [
              "heapster",
              "http:heapster:",
              "https:heapster:",
              "dashboard-metrics-scraper",
              "http:dashboard-metrics-scraper",
            ]
          verbs: ["get"]

- name: Create Kubernetes-Dashboard RBAC Cluster
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      kind: ClusterRole
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        labels:
          app: kubernetes-dashboard
        name: kubernetes-dashboard
      rules:
        # Allow Metrics Scraper to get metrics from the Metrics server
        - apiGroups: ["metrics.k8s.io"]
          resources: ["pods", "nodes"]
          verbs: ["get", "list", "watch"]

- name: Create Kubernetes-Dashboard RoleBinding
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        labels:
          app: kubernetes-dashboard
        name: kubernetes-dashboard
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: kubernetes-dashboard
      subjects:
        - kind: ServiceAccount
          name: kubernetes-dashboard
          namespace: kubernetes-dashboard

- name: Create Kubernetes-Dashboard ClusterRoleBinding
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: kubernetes-dashboard
        namespace: kubernetes-dashboard
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
        - kind: ServiceAccount
          name: kubernetes-dashboard
          namespace: kubernetes-dashboard

- name: Create Kubernetes-Dashboard Deployment
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        labels:
          app: kubernetes-dashboard
        name: kubernetes-dashboard
        namespace: kubernetes-dashboard
      spec:
        replicas: 1
        revisionHistoryLimit: 10
        selector:
          matchLabels:
            app: kubernetes-dashboard
        template:
          metadata:
            labels:
              app: kubernetes-dashboard
          spec:
            securityContext:
              seccompProfile:
                type: RuntimeDefault
            containers:
              - name: kubernetes-dashboard
                image: kubernetesui/dashboard:v2.7.0
                imagePullPolicy: Always
                ports:
                  - containerPort: 9090
                    protocol: TCP
                args:
                  - --namespace=kubernetes-dashboard
                volumeMounts:
                  # Create on-disk volume to store exec logs
                  - mountPath: /tmp
                    name: tmp-volume
                livenessProbe:
                  httpGet:
                    scheme: HTTP
                    path: /
                    port: 9090
                  initialDelaySeconds: 30
                  timeoutSeconds: 30
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  runAsUser: 1001
                  runAsGroup: 2001
            volumes:
              - name: tmp-volume
                emptyDir: {}
            serviceAccountName: kubernetes-dashboard
            nodeSelector:
              "kubernetes.io/os": linux
            # Comment the following tolerations if Dashboard must not be deployed on master
            tolerations:
              - key: node-role.kubernetes.io/master
                effect: NoSchedule

- name: Create an Ingress for the Kubernetes-Dashboard
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: kubernetes-dashboard-ingress
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: internal-issuer
          traefik.ingress.kubernetes.io/router.middlewares: kube-system-redirect-https@kubernetescrd
      spec:
        rules:
          - host: kubernetes-dashboard.{{ domain }}
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: kubernetes-dashboard
                      port:
                        number: 80
        tls:
          - secretName: kubernetes-dashboard-tls
            hosts:
              - kubernetes-dashboard.{{ domain }}

- name: Create Metrics Scraper Service
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        labels:
          app: dashboard-metrics-scraper
        name: dashboard-metrics-scraper
        namespace: kubernetes-dashboard
      spec:
        ports:
          - port: 8000
            targetPort: 8000
        selector:
          app: dashboard-metrics-scraper

- name: Create Metrics Scraper Deployment
  kubernetes.core.k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: kubernetes-dashboard
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        labels:
          app: dashboard-metrics-scraper
        name: dashboard-metrics-scraper
        namespace: kubernetes-dashboard
      spec:
        replicas: 1
        revisionHistoryLimit: 10
        selector:
          matchLabels:
            app: dashboard-metrics-scraper
        template:
          metadata:
            labels:
              app: dashboard-metrics-scraper
          spec:
            securityContext:
              seccompProfile:
                type: RuntimeDefault
            containers:
              - name: dashboard-metrics-scraper
                image: kubernetesui/metrics-scraper:v1.0.8
                ports:
                  - containerPort: 8000
                    protocol: TCP
                livenessProbe:
                  httpGet:
                    scheme: HTTP
                    path: /
                    port: 8000
                  initialDelaySeconds: 30
                  timeoutSeconds: 30
                volumeMounts:
                  - mountPath: /tmp
                    name: tmp-volume
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                  runAsUser: 1001
                  runAsGroup: 2001
            serviceAccountName: kubernetes-dashboard
            nodeSelector:
              "kubernetes.io/os": linux
            # Comment the following tolerations if Dashboard must not be deployed on master
            tolerations:
              - key: node-role.kubernetes.io/master
                effect: NoSchedule
            volumes:
              - name: tmp-volume
                emptyDir: {}
