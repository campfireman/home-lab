---
- name: Create Grafana namespace
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: grafana

- name: Create Grafana persistent volume claim
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: grafana
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: grafana-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 10Gi

- name: Create Grafana Deployment
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: grafana
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: grafana
        labels:
          app: grafana
      spec:
        replicas: 3
        selector:
          matchLabels:
            app: grafana
        template:
          metadata:
            labels:
              app: grafana
          spec:
            securityContext:
              fsGroup: 472
            containers:
              - name: grafana
                image: grafana/grafana:10.0.1
                imagePullPolicy: "IfNotPresent"
                ports:
                  - containerPort: 3000
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /robots.txt
                    port: 3000
                    scheme: HTTP
                  initialDelaySeconds: 10
                  periodSeconds: 30
                  successThreshold: 1
                  timeoutSeconds: 2
                livenessProbe:
                  failureThreshold: 3
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  successThreshold: 1
                  tcpSocket:
                    port: 3000
                  timeoutSeconds: 1
                resources:
                  requests:
                    cpu: 250m
                    memory: 750Mi
                volumeMounts:
                  - mountPath: /var/lib/grafana
                    name: grafana-pv
            volumes:
              - name: grafana-pv
                persistentVolumeClaim:
                  claimName: grafana-pvc

- name: Create Grafana Service
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: grafana
    definition:
      kind: Service
      apiVersion: v1
      metadata:
        name: grafana-service
      spec:
        selector:
          app: grafana
        ports:
          - port: 80
            name: http
            protocol: TCP
            targetPort: 3000

- name: Create an Ingress for the Grafana service
  k8s:
    kubeconfig: /home/{{ ansible_user }}/.kube/config
    state: present
    namespace: grafana
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: grafana-ingress
        annotations:
          kubernetes.io/ingress.class: "traefik"
          cert-manager.io/cluster-issuer: internal-issuer
          traefik.ingress.kubernetes.io/router.middlewares: kube-system-redirect-https@kubernetescrd
      spec:
        rules:
          - host: grafana.{{ domain }}
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: grafana-service
                      port:
                        number: 80
        tls:
          - secretName: grafana-tls
            hosts:
              - grafana.{{ domain }}
